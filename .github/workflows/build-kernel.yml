name: Compile kernel

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      kernel_toolchain:
        description: "Select the compilation toolchain"
        required: false
        default: "gcc"
        type: choice
        options:
          - clang
          - gcc
  schedule:
    - cron: 0 10 * * 1

env:
  TZ: Asia/Shanghai
  kernel_config: kernel-config/release/general

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          repository: ophub/kernel

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt -y update
          sudo -E apt -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          #sudo -E apt -y full-upgrade
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Custom Configuration
        run: |
          cd $GITHUB_WORKSPACE
          kernel_version=$(curl -fsSL https://api.github.com/repos/ophub/kernel/releases/tags/kernel_stable | grep name | awk 'END{print}' | awk -F '"' '{print $4}' | awk -F '.tar.gz' '{print $1}')
          echo "kernel_version=$kernel_version" >> $GITHUB_ENV
          # wget https://raw.githubusercontent.com/ZenQy/OpenWrt/main/kernel.config
          cd $kernel_config
          file=config-$(echo $kernel_version | awk -F '.' '{print $1"."$2}')
          # Enable BTF.
          sed -i '/CONFIG_DEBUG_INFO/d;/CONFIG_RING_BUFFER/d;/CONFIG_TRACING/d;/CONFIG_STACKTRACE/d;/CONFIG_NOP_TRACER/d;/CONFIG_BINARY_PRINTF/d;/CONFIG_EVENT_TRACING/d;/CONFIG_TRACE_CLOCK/d;/CONFIG_TASKS_RCU/d' $file
          echo "CONFIG_DEBUG_INFO=y
          CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y
          CONFIG_DEBUG_INFO_COMPRESSED_ZLIB=y
          CONFIG_DEBUG_INFO_BTF=y
          CONFIG_KPROBE_EVENTS=y
          CONFIG_BPF_EVENTS=y
          CONFIG_RING_BUFFER=y
          CONFIG_TRACING=y
          CONFIG_STACKTRACE=y
          CONFIG_NOP_TRACER=y
          CONFIG_BINARY_PRINTF=y
          CONFIG_EVENT_TRACING=y
          CONFIG_TRACE_CLOCK=y
          CONFIG_TASKS_RCU=y" >> $file

      - name: Compile the kernel [ ${{ env.kernel_version }} ]
        uses: ophub/amlogic-s9xxx-armbian@main
        if: success()
        with:
          build_target: kernel
          kernel_source: unifreq
          kernel_version: ${{ env.kernel_version }}
          kernel_auto: true
          kernel_package: all
          kernel_toolchain: ${{ inputs.kernel_toolchain }}
          kernel_sign: -Zenith
          kernel_config: ${{ env.kernel_config }}

      - name: Upload Kernel to Release
        uses: ncipollo/release-action@main
        if: success()
        with:
          tag: kernel_stable
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.RELEASES_TOKEN }}
          body: |
            - 这是最新`稳定版`内核，增加一些自定义配置。

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        if: success()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
