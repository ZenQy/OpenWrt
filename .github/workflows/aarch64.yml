name: Build Flippy OpenWrt Package

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: aarch64.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
  UPLOAD: /upload

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p $UPLOAD
        sudo chown $USER:$GROUPS $UPLOAD

        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt
        
    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH        
     
    - name: Compile Firmware
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        echo -e "$(nproc) thread compile"
        
        make -j$(nproc) || make -j1 || make -j1 V=s
        
        cp .config ${UPLOAD}/build.config 
 
    - name: Package Armvirt as OpenWrt
      if: (!cancelled())
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: s905d_s905x3
        WHOAMI: ZenQy
        KERNEL_VERSION_NAME: 5.4.144_5.14.2
        KERNEL_AUTO_LATEST: true

    - name: Create release
      if: (!cancelled())
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} 🚀 / N1-Openwrt | 编译
        allowUpdates: true
        tag: ${{ env.tag_name }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN  }}
        body: |
          默认IP：192.168.1.5 默认密码： password
          全新刷入emmc方法：
             1. 固件刷入U盘。
             2. openwrt-install-amlogic
             3. 拔掉U盘，断电重启。
             
          在线升级方法：
             1. 上传 img 到/mnt/mmcblk2p4
             2. cd /mnt/mmcblk2p4
             3. gzip -d  *.img.gz
             4. openwrt-update-amlogic xxxx.img
        artifacts:  ${{ env.UPLOAD }}/build.config,${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz
        
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: (!cancelled())
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}

    - name: Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          打包时间：${{ env.DATE }}
          Phicomm-N1 打包完成
